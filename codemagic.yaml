definitions:
  scripts:
    - &flutter_packages
      name: Get Flutter packages
      script: |
        flutter packages pub get
    
    - &android_set_keys
      name: Set up keystore
      script: |
          echo $CM_KEYSTORE | base64 --decode > $CM_KEYSTORE_PATH
    
    - &android_set_local_properties
      name: Set up local.properties
      script: | 
        echo "flutter.sdk=$HOME/programs/flutter" > "$CM_BUILD_DIR/android/local.properties"
    
    - &flutter_build_apk_prod
      name: Build APK with Flutter
      script: | 
        flutter build apk --flavor prod --build-name=1.0.$PROJECT_BUILD_NUMBER --build-number=$PROJECT_BUILD_NUMBER

    - &create_changelog
      name: Create a changelog
      script: | 
        if [[ -z ${CM_PREVIOUS_COMMIT} ]]
          then
            echo "No finished builds found to generate changelog" | tee release_notes.txt
          else
            echo "$(git-changelog generate --previous-commit $CM_PREVIOUS_COMMIT)" | tee release_notes.txt
        fi

    - &discord_notification_build_android
      name: Discord notification
      script: | 
        set -ex
        APP_LINK=$(echo $CM_ARTIFACT_LINKS | jq -r '.[] | select(.name=="app-release.apk") | .url')
      
        # Get first 7 digits of commit number
        COMMIT=$(echo "${CM_COMMIT}" | sed 's/^\(........\).*/\1/;q')

        # Get commit message
        COMMIT_MESSAGE=$(git log --format=%B -n 1 $CM_COMMIT)
          
        # Get commit author
        AUTHOR=$(git show -s --format='%ae' $CM_COMMIT)
          
        # Publish the notification
        curl -H "Content-Type: multipart/form-data" \
        -F 'payload_json={"username" : "Aki-Android", "content": "**Commit:** `'"$COMMIT"'`\n\n**Commit message:** '"$COMMIT_MESSAGE"'\n\n**Branch:** '"$CM_BRANCH"'\n\n**Author:** '"$AUTHOR"'\n\n**Artifacts: **\n\n'"$APP_LINK"'\n\n"}' \
        -F "file1=@release_notes.txt" \
        $WEBHOOK_URL

  email_release: &email_release
    email:
      recipients:
        - maidana1454@gmail.com
      notify:
        success: true
        failure: true
  
  firebase_app_distribution: &firebase_app_distribution
    firebase:
        firebase_service_account: $FIREBASE_SERVICE_ACCOUNT
        android:
          app_id: 1:212788224879:android:85e1b0e58b07f594a3fe9a 
          groups:
            - android_testers
          artifact_type: 'apk'
  
  environment: &enviroments
      flutter: 3.7.12
      xcode: latest
      cocoapods: default
      # android_signing:
      #   - keystore_reference

workflows:
  firebase_android_qa:
    name: MyPets Qa
    environment:
      <<: *enviroments
      groups:
        - keystore_credentials
        - discord_credentials
        - firebase_credentials
    scripts:
      - *android_set_keys
      - *android_set_local_properties
      - *flutter_packages
      - *flutter_build_apk_prod
      - *create_changelog

    artifacts:
      - app/build/outputs/**/**/*.apk
      - build/app/outputs/flutter-apk/app-prod-release.apk
      - flutter_drive.log
      # - app/build/outputs/**/*.aab
      # - build/app/outputs/bundle/release/app-release.aab

    publishing:
      <<: [
        *firebase_app_distribution,
        *email_release
        ]
      scripts:
        - *discord_notification_build_android
    triggering:
      events:
        - push
      branch_patterns:
        - pattern: 'qa'
          include: true
          source: true
      cancel_previous_builds: true